# Generated by Django 3.2.6 on 2021-11-09 08:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('that_status', models.JSONField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '회원정보 변경 로그',
                'verbose_name_plural': '회원정보 변경 로그',
            },
        ),
        migrations.CreateModel(
            name='BankInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10, unique=True)),
                ('bank_name', models.CharField(max_length=10)),
                ('account_number', models.CharField(max_length=50)),
                ('owner', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': '은행 정보',
                'verbose_name_plural': '은행 정보',
            },
        ),
        migrations.CreateModel(
            name='Counseling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('consulting_status_fst', models.CharField(max_length=10)),
                ('consulting_status_snd', models.CharField(max_length=10)),
                ('consulting_memo', models.TextField()),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '상담내용',
                'verbose_name_plural': '상담내용',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=13, unique=True)),
                ('account_pw', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=30)),
                ('status', models.CharField(default='active', max_length=20)),
                ('expire_at', models.DateField(blank=True, null=True)),
                ('sms_receive_time', models.SmallIntegerField(default=11)),
                ('sms_receive_day', models.SmallIntegerField(default=1)),
                ('is_sms_info', models.BooleanField(default=True)),
                ('is_sms_combination', models.BooleanField(default=True)),
                ('is_sms_result', models.BooleanField(default=True)),
                ('join_at', models.DateTimeField(blank=True)),
                ('join_ip', models.CharField(blank=True, default='', max_length=15)),
                ('join_domain', models.URLField(blank=True, default='')),
                ('join_referer', models.URLField(blank=True, default='')),
                ('join_intro_url', models.URLField(blank=True, default='')),
                ('join_device', models.CharField(blank=True, default='pc', max_length=10)),
                ('consulting_status_fst', models.CharField(default='waiting', max_length=10)),
                ('consulting_status_snd', models.CharField(default='waiting', max_length=10)),
                ('is_auth', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '회원',
                'verbose_name_plural': '회원',
            },
        ),
        migrations.CreateModel(
            name='MemberModifyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_data', models.JSONField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '회원정보 변경 로그',
                'verbose_name_plural': '회원정보 변경 로그',
            },
        ),
        migrations.CreateModel(
            name='MemberPauseLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=10)),
                ('remaining', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '정지 로그',
                'verbose_name_plural': '정지 로그',
            },
        ),
        migrations.CreateModel(
            name='Memo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10)),
                ('memo', models.TextField()),
                ('created_at', models.DateTimeField(blank=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('reserved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '메모',
                'verbose_name_plural': '메모',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('contents', models.TextField()),
                ('file_name', models.ImageField(upload_to='notice/')),
                ('type', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '일대일 문의',
                'verbose_name_plural': '일대일 문의',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pg_company', models.CharField(max_length=20)),
                ('pg_code', models.CharField(max_length=64, unique=True)),
                ('method', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=10)),
                ('amount', models.IntegerField()),
                ('phone_number', models.CharField(max_length=11)),
                ('device', models.CharField(max_length=10)),
                ('ip_address', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': '결제',
                'verbose_name_plural': '결제',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('period', models.SmallIntegerField()),
                ('amount', models.IntegerField()),
                ('discount_amount', models.IntegerField()),
                ('description', models.TextField()),
                ('status', models.CharField(default='inactive', max_length=10)),
                ('is_hide', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '제품',
                'verbose_name_plural': '제품',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10)),
                ('start_at', models.DateTimeField()),
                ('payment_info', models.JSONField()),
                ('payment_fail_code', models.CharField(blank=True, default='', max_length=10)),
                ('payment_fail_msg', models.TextField(blank=True, default='')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member')),
                ('product', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.product')),
            ],
            options={
                'verbose_name': '정기결제',
                'verbose_name_plural': '정기결제',
            },
        ),
        migrations.CreateModel(
            name='QnA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=10)),
                ('contents', models.TextField()),
                ('answer', models.TextField()),
                ('created_at', models.DateTimeField(blank=True)),
                ('answer_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member')),
            ],
            options={
                'verbose_name': '일대일 문의',
                'verbose_name_plural': '일대일 문의',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['amount', 'discount_amount', 'status', 'is_hide'], name='product_search_common'),
        ),
        migrations.AddField(
            model_name='payment',
            name='admin',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='bank_info',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.bankinfo'),
        ),
        migrations.AddField(
            model_name='payment',
            name='charge_admin',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_charge_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddField(
            model_name='payment',
            name='product',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.product'),
        ),
        migrations.AddField(
            model_name='payment',
            name='subscription_id',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.subscription'),
        ),
        migrations.AddField(
            model_name='notice',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='memo',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='memo',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddField(
            model_name='memberpauselog',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='memberpauselog',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddField(
            model_name='membermodifylog',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='membermodifylog',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddField(
            model_name='member',
            name='charge_admin',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='member',
            name='product',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.product'),
        ),
        migrations.AddField(
            model_name='counseling',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='counseling',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddIndex(
            model_name='bankinfo',
            index=models.Index(fields=['bank_name', 'account_number', 'owner'], name='bank_info_search_common'),
        ),
        migrations.AddField(
            model_name='assignmentlog',
            name='admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignment_charge_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assignmentlog',
            name='assignment_admin',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignment_admin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='assignmentlog',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.member'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['status', 'start_at', 'payment_fail_code'], name='common_search'),
        ),
        migrations.AddIndex(
            model_name='qna',
            index=models.Index(fields=['title'], name='qna_search_target'),
        ),
        migrations.AddIndex(
            model_name='qna',
            index=models.Index(fields=['created_at', 'answer_at'], name='qna_search_common'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['phone_number'], name='payment_search_target'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['pg_company', 'method', 'status', 'device', 'created_at'], name='payment_search_common'),
        ),
        migrations.AddIndex(
            model_name='notice',
            index=models.Index(fields=['type', 'status', 'created_at'], name='notice_search_common'),
        ),
        migrations.AddIndex(
            model_name='memo',
            index=models.Index(fields=['type', 'created_at', 'reserved_at'], name='memo_search_common'),
        ),
        migrations.AddIndex(
            model_name='memberpauselog',
            index=models.Index(fields=['reason', 'remaining', 'created_at'], name='member_pause_search_common'),
        ),
        migrations.AddIndex(
            model_name='membermodifylog',
            index=models.Index(fields=['updated_at'], name='member_modify_search_common'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['name'], name='member_search_target'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['status', 'expire_at', 'join_at', 'join_device', 'consulting_status_fst', 'consulting_status_snd'], name='member_search_common'),
        ),
        migrations.AddIndex(
            model_name='member',
            index=models.Index(fields=['sms_receive_time', 'sms_receive_day', 'is_sms_info', 'is_sms_combination', 'is_sms_result'], name='member_sms_send'),
        ),
        migrations.AddIndex(
            model_name='counseling',
            index=models.Index(fields=['type', 'consulting_status_fst', 'consulting_status_snd', 'created_at'], name='counseling_search_common'),
        ),
        migrations.AddIndex(
            model_name='assignmentlog',
            index=models.Index(fields=['created_at'], name='assignment_search_common'),
        ),
    ]
